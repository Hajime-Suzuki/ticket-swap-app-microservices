service:
  name: ${file(../../shared-config.js):shared.ticketServiceName}

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-central-1
  environment: ${file(config.js):env}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        - { Fn::GetAtt: [ticketsTable, Arn] }
        - { Fn::GetAtt: [eventTable, Arn] }
        - { Fn::GetAtt: [userTable, Arn] }

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  serverless-offline:
    port: 8081

  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

functions:
  tickets:
    name: ${self:service.name}
    handler: src/index.handler
    events:
      - http:
          method: get
          path: '/tickets'

  eventEventListener:
    name: ${self:service.name}-event-event-listener
    handler: src/event-event-listener.handler
    events:
      - sns:
          topicName: ${file(../../shared-config.js):shared.eventCreated}
          displayName: ${file(../../shared-config.js):shared.eventCreated}
      - sqs: # TODO: check sns vs sqs
          arn:
            Fn::GetAtt:
              - eventCreatedSQS
              - Arn
          batchSize: 1

resources:
  Resources:
    eventCreatedSQS:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: event-created-queue-test

    ticketsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Ticket-swap-tickets-tickets
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

        BillingMode: PAY_PER_REQUEST

    eventTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Ticket-swap-tickets-event
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

        BillingMode: PAY_PER_REQUEST

    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Ticket-swap-tickets-user
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

        BillingMode: PAY_PER_REQUEST
