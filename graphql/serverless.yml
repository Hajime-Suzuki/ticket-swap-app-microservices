service:
  name: ${file(config.js):env.gqlServiceName}

provider:
  name: aws
  runtime: nodejs10.x
  region: ${file(config.js):env.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - 'arn:aws:logs:#{AWS::Region}:#{AWS::AccountId}:log-group:/aws/lambda/*:*:*'
    - Effect: 'Allow'
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource:
        - 'arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:*'

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-pseudo-parameters

custom:
  serverless-offline:
    port: ${file(config.js):env.gqlPort}
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

functions:
  graphql:
    name: ${file(config.js):env.gqlServiceName}-handler
    handler: src/index.graphql
    events:
      - http:
          method: post
          path: '/graphql'
      - http:
          method: get
          path: '/graphql'
